/**
 * Created with JetBrains RubyMine.
 * User: marco
 * Date: 30/07/12
 * Time: 12.41
 */

function initialize(sensingPercept){
  /* SoundManager initialization. Must be here, that is before either
   * onDOMContentLoaded() or window.onload() fire. */

  soundManager.url = '/assets/sm2/';
  soundManager.flashVersion = 9; // optional: shiny features (default = 8)
  soundManager.useFlashBlock = false; // optionally, enable when you're ready to dive in
  //soundManager.useHTML5Audio = true

  // Adds placeholder to the jQuery support variables
  jQuery.support.placeholder = false;
  var phTest = document.createElement('input');
  if('placeholder' in phTest){ jQuery.support.placeholder = true; }

  Game.config = {
    env:'<%= Rails.env %>',
    wssServer: <%= Socky.random_host.to_json.html_safe %>,
    pusherKey:'<%= Pusher.key.html_safe %>',
    debugging:(function() {
      <% if Rails.env.development? %>
      return {debug:true, log:true};
      <% else %>
      return {debug:false, log:false};
      <% end %>
    })()
  };

  /* Starts the game after the page loads.
   * When the page has finished loading calls the main function.
   * It cannot be done with body onload because it's overwritten by
   * the layout body */
  jQuery(document).ready(function() {
    $("#loadInfo").show();
    var loaded = false;

    // Image preloader
    $.preloadCssImages({
        statusTextEl:'#textStatus',
        statusBarEl:'#status',
        onComplete:function() { //Do this when pre-loading finished
          if(!loaded){
            loaded = true;
            $("#loadInfo").remove();
            loadFonts();
          }
        }}
    );

    // Load fonts (has to be done after image preloading)
    function loadFonts(){
      WebFont.load({
        custom: {
          families: ['HelveticaNeueBI:i,bi'],
          urls: ['/assets/client/frontend/fonts.css']
        },
//        fontactive: function(fontFamily, fontDescription) {
//          console.info("Loaded: " + fontFamily + ' => ' + fontDescription);
//        },
        active: function() {
          startGame();
        }
      });
    }

    function startGame(){
      Game.initialize(sensingPercept);
    }
  });

}